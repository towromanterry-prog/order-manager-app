import Dexie from 'dexie'

// –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞/–∏–º–ø–æ—Ä—Ç–∞
let exportDB, importInto
try {
  const { exportDB: _exportDB, importInto: _importInto } = require('dexie-export-import')
  exportDB = _exportDB
  importInto = _importInto
} catch (error) {
  console.warn('dexie-export-import –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
  exportDB = async (db) => {
    const data = { formatName: 'dexie', data: { tables: [], data: [] } }
    return new Blob([JSON.stringify(data)], { type: 'application/json' })
  }
  importInto = async () => Promise.resolve()
}

export const db = new Dexie('MyAppDatabase', {
  chromeTransactionDurability: 'strict'
})

db.version(2).stores({
  services:    '++id,name,defaultPrice',
  orders:      '++id,createDate,status', 
  tags:        '++id,&name',
  orderItems:  '++id,orderId,serviceId,price,status,[orderId+serviceId]',
  serviceTags: '++id,serviceId,tagId,[serviceId+tagId]'
})

db.on('error', error => {
  console.error('Dexie error:', error)
})

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
export class DataProtection {
  constructor() {
    this.backupPrefix = 'app_backup_'
    this.maxLocalBackups = 3
    this.autoBackupInterval = null
  }

  // –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞—â–∏—Ç—ã
  async initComprehensiveProtection() {
    const results = {
      persistent: false,
      autoBackup: false,
      localBackup: false,
      estimate: null
    }

    try {
      // 1. –ó–∞–ø—Ä–æ—Å–∏—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ
      results.persistent = await this.requestPersistentStorage()
      
      // 2. –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–≤–æ—Ç–µ
      results.estimate = await this.getStorageInfo()
      
      // 3. –°–æ–∑–¥–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–π –ª–æ–∫–∞–ª—å–Ω—ã–π –±—ç–∫–∞–ø
      results.localBackup = await this.createLocalBackup()
      
      // 4. –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
      results.autoBackup = this.startAutoBackup()
      
      // 5. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
      this.setupStorageEventHandlers()
      
      console.log('–ó–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞:', results)
      return results
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞—â–∏—Ç—ã:', error)
      return results
    }
  }

  // –ó–∞–ø—Ä–æ—Å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
  async requestPersistentStorage() {
    if (!navigator.storage?.persist) {
      console.warn('API –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è')
      return false
    }

    try {
      // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
      const isPersisted = await navigator.storage.persisted()
      if (isPersisted) {
        console.log('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–æ')
        return true
      }

      // –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
      const granted = await navigator.storage.persist()
      if (granted) {
        console.log('‚úÖ –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ')
        return true
      } else {
        console.warn('‚ùå –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ')
        // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–∞–∫ –≤–∫–ª—é—á–∏—Ç—å –≤—Ä—É—á–Ω—É—é
        this.showPersistentStorageHelp()
        return false
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è:', error)
      return false
    }
  }

  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
  async getStorageInfo() {
    if (!navigator.storage?.estimate) return null
    
    try {
      const estimate = await navigator.storage.estimate()
      const quotaMB = (estimate.quota / 1024 / 1024).toFixed(1)
      const usageMB = (estimate.usage / 1024 / 1024).toFixed(1)
      
      console.log(`–ö–≤–æ—Ç–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è: ${quotaMB}MB, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${usageMB}MB`)
      
      // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–æ–ª–µ–µ 80%
      const usagePercent = (estimate.usage / estimate.quota) * 100
      if (usagePercent > 80) {
        console.warn(`‚ö†Ô∏è –•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –Ω–∞ ${usagePercent.toFixed(1)}%`)
      }
      
      return { quota: estimate.quota, usage: estimate.usage, percent: usagePercent }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ:', error)
      return null
    }
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞ –≤ localStorage
  async createLocalBackup() {
    try {
      const blob = await exportDB(db)
      const reader = new FileReader()
      
      return new Promise((resolve) => {
        reader.onload = () => {
          try {
            const backupKey = `${this.backupPrefix}${Date.now()}`
            const backupData = {
              timestamp: new Date().toISOString(),
              size: blob.size,
              data: reader.result
            }
            
            localStorage.setItem(backupKey, JSON.stringify(backupData))
            this.cleanOldLocalBackups()
            
            console.log(`üì¶ –õ–æ–∫–∞–ª—å–Ω—ã–π –±—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: ${backupKey}`)
            resolve(true)
          } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞:', error)
            resolve(false)
          }
        }
        
        reader.onerror = () => {
          console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±—ç–∫–∞–ø–∞')
          resolve(false)
        }
        
        reader.readAsDataURL(blob)
      })
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞:', error)
      return false
    }
  }

  // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–∫–∞–ª—å–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤
  cleanOldLocalBackups() {
    try {
      const backupKeys = Object.keys(localStorage)
        .filter(key => key.startsWith(this.backupPrefix))
        .sort((a, b) => b.localeCompare(a)) // –Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–º–∏
      
      // –£–¥–∞–ª–∏—Ç—å –≤—Å–µ, –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö N
      backupKeys.slice(this.maxLocalBackups).forEach(key => {
        localStorage.removeItem(key)
        console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –±—ç–∫–∞–ø: ${key}`)
      })
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤:', error)
    }
  }

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
  startAutoBackup(intervalHours = 6) {
    if (this.autoBackupInterval) {
      clearInterval(this.autoBackupInterval)
    }

    this.autoBackupInterval = setInterval(async () => {
      console.log('‚è∞ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±—ç–∫–∞–ø...')
      await this.createLocalBackup()
    }, intervalHours * 60 * 60 * 1000)

    console.log(`üîÑ –ê–≤—Ç–æ–±—ç–∫–∞–ø –∑–∞–ø—É—â–µ–Ω (–∫–∞–∂–¥—ã–µ ${intervalHours}—á)`)
    return true
  }

  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞
  async restoreFromLocalBackup(backupKey = null) {
    try {
      let selectedBackup = backupKey
      
      if (!selectedBackup) {
        // –ù–∞–π—Ç–∏ —Å–∞–º—ã–π —Å–≤–µ–∂–∏–π –±—ç–∫–∞–ø
        const backupKeys = Object.keys(localStorage)
          .filter(key => key.startsWith(this.backupPrefix))
          .sort((a, b) => b.localeCompare(a))
        
        if (backupKeys.length === 0) {
          throw new Error('–õ–æ–∫–∞–ª—å–Ω—ã–µ –±—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
        }
        
        selectedBackup = backupKeys[0]
      }
      
      const backupJson = localStorage.getItem(selectedBackup)
      if (!backupJson) {
        throw new Error(`–ë—ç–∫–∞–ø ${selectedBackup} –Ω–µ –Ω–∞–π–¥–µ–Ω`)
      }
      
      const backup = JSON.parse(backupJson)
      const response = await fetch(backup.data)
      const blob = await response.blob()
      
      await importInto(db, blob, { clearTablesBeforeImport: true })
      
      console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ ${selectedBackup}`)
      return true
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞:', error)
      return false
    }
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
  setupStorageEventHandlers() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ localStorage
    window.addEventListener('storage', (event) => {
      if (event.key?.startsWith(this.backupPrefix)) {
        console.log('üìä –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –±—ç–∫–∞–ø–∞—Ö')
      }
    })

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ IndexedDB
    db.on('ready', () => {
      console.log('üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ')
    })

    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    setInterval(async () => {
      const isPersisted = await navigator.storage?.persisted()
      if (!isPersisted) {
        console.warn('‚ö†Ô∏è –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–æ–∑–≤–∞–Ω–æ')
        await this.requestPersistentStorage()
      }
    }, 30 * 60 * 1000) // –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–º–æ—â—å –ø–æ –≤–∫–ª—é—á–µ–Ω–∏—é –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
  showPersistentStorageHelp() {
    console.log(`
üìã –î–ª—è –∑–∞—â–∏—Ç—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è:

Chrome/Edge:
1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–∞–º–æ—á–µ–∫ –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
2. –†–∞–∑—Ä–µ—à–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω—ã)
3. –î–æ–±–∞–≤—å—Ç–µ —Å–∞–π—Ç –≤ –∑–∞–∫–ª–∞–¥–∫–∏
4. –†–µ–≥—É–ª—è—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

Firefox:
1. –ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ "–†–∞–∑—Ä–µ—à–∏—Ç—å"
2. –ò–ª–∏ –∑–∞–π–¥–∏—Ç–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å ‚Üí –†–∞–∑—Ä–µ—à–µ–Ω–∏—è

Safari:
1. –î–æ–±–∞–≤—å—Ç–µ —Å–∞–π—Ç –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
2. –†–µ–≥—É–ª—è—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    `)
  }

  // –≠–∫—Å–ø–æ—Ä—Ç –≤ —Ñ–∞–π–ª –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  async exportToFile(filename = null) {
    try {
      const blob = await exportDB(db)
      const timestamp = new Date().toISOString().replace(/[:.]/g, '-').split('T')[0]
      const defaultName = filename || `myapp-backup-${timestamp}.db`
      
      const url = URL.createObjectURL(blob)
      const link = document.createElement('a')
      link.href = url
      link.download = defaultName
      link.style.display = 'none'
      
      document.body.appendChild(link)
      link.click()
      document.body.removeChild(link)
      URL.revokeObjectURL(url)
      
      console.log(`üíæ –§–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: ${defaultName}`)
      return { success: true, filename: defaultName, size: blob.size }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ —Ñ–∞–π–ª:', error)
      return { success: false, error: error.message }
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ª–æ–∫–∞–ª—å–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤
  getLocalBackups() {
    return Object.keys(localStorage)
      .filter(key => key.startsWith(this.backupPrefix))
      .map(key => {
        try {
          const data = JSON.parse(localStorage.getItem(key))
          return {
            key,
            timestamp: data.timestamp,
            size: data.size,
            age: Date.now() - new Date(data.timestamp).getTime()
          }
        } catch {
          return null
        }
      })
      .filter(Boolean)
      .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))
  }

  // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–±—ç–∫–∞–ø
  stopAutoBackup() {
    if (this.autoBackupInterval) {
      clearInterval(this.autoBackupInterval)
      this.autoBackupInterval = null
      console.log('‚èπÔ∏è –ê–≤—Ç–æ–±—ç–∫–∞–ø –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }
  }
}

// –°–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –∑–∞—â–∏—Ç—ã –¥–∞–Ω–Ω—ã—Ö
export const dataProtection = new DataProtection()

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è
dataProtection.initComprehensiveProtection()

// –≠–∫—Å–ø–æ—Ä—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
export async function backupDatabase() {
  return await exportDB(db)
}

export async function restoreDatabase(blob) {
  await importInto(db, blob, { clearTablesBeforeImport: true })
}

export default db